# Estágio de build
# Usa a imagem oficial do Node.js
FROM node:18-alpine as build-stage

# Define o diretório de trabalho dentro do container
WORKDIR /app

# Copia os arquivos package.json e package-lock.json
COPY package*.json ./

# Instala as dependências
#RUN npm install

# Copia o restante do código da aplicação
COPY . .

# Compila a aplicação para produção
#RUN npm run build

# Estágio de produção
# Usa uma imagem do Nginx para servir a aplicação estática
FROM nginx:stable-alpine as production-stage

# Copia os arquivos estáticos compilados do estágio de build para o Nginx
#COPY --from=build-stage /app/dist /usr/share/nginx/html

# Copia o arquivo de configuração do Nginx
COPY nginx.conf /etc/nginx/conf.d/default.conf


# Copia o arquivo de configuração do Nginx (opcional, mas recomendado)
# Se você tiver um arquivo de configuração customizado, adicione esta linha:
# COPY nginx.conf /etc/nginx/conf.d/default.conf

# Expondo a porta 80 do Nginx
EXPOSE 80

# Comando para iniciar o Nginx
CMD ["nginx", "-g", "daemon off;"]